perf_data = perf_data[perf_data$training==1]
raw_place_cell_no = ggplot(data=perf_data, aes(x=comp, y=value, fill=factor(comp))) +
stat_summary(fun=mean, geom='bar', alpha=1, position = position_dodge(width=0.8), width=0.8,colour=NA) +
stat_summary(fun.data = mean_cl_normal, geom="errorbar", width=0.3, position = position_dodge(width=0.8)) +
geom_point(position=position_jitterdodge(dodge.width = 0.8, jitter.width = 0.2), alpha=0.5, stroke = 0,shape=16,size=1) +
scale_x_discrete(breaks=c(1,2,3),
labels=c("Same abundance","Same novelty", "Different")) +
scale_fill_manual(values = c("#7372ae", "#81b882", "#cecdcd"))+
labs(y ='% cells PCs in \nboth environments', x=NULL, fill=NULL)+guides(fill="none")
raw_place_cell_no
lmm = lmer(value ~factor(comp) +(1|mouse) + (1|dataset), data =perf_data)
anova(lmm)
# Relative number of place cells
dataset = readMat(file.path(folder,"batch_analysis\\2point0\\R\\data\\pc_overlap_p_cond_diff.mat"))
perf_data = dataset[[1]]
perf_data <- data.table( "value" = perf_data[,1]*100,
"dataset" = perf_data[,2],
"comp" = factor(perf_data[,3]),
"expected" = perf_data[,4],
"training" = factor(perf_data[,4]),
"mouse" = perf_data[,5])
perf_data = perf_data[perf_data$training==1]
overlap_plot_diff = ggplot(data=perf_data, aes(x=comp, y=value, fill=factor(comp))) +
stat_summary(fun=mean, geom='bar', alpha=1, position = position_dodge(width=0.8), width=0.8,colour=NA) +
stat_summary(fun.data = mean_cl_normal, geom="errorbar", width=0.3, position = position_dodge(width=0.8)) +
geom_point(position=position_jitterdodge(dodge.width = 0.8, jitter.width = 0.2), alpha=0.5, stroke = 0,shape=16,size=1) +
scale_x_discrete(breaks=c(1,2,3),
labels=c("Same abundance","Same novelty", "Different")) +
scale_fill_manual(values = c("#7372ae", "#81b882", "#cecdcd"))+
labs(y ='Place cell overlap \n(% difference from chance)', x=NULL, fill=NULL)+guides(fill="none")
overlap_plot_diff
lmm = lmer(value ~comp +(1|mouse) + (1|dataset), data =perf_data)
anova(lmm)
## Correlation pc cells maps
dataset = readMat(file.path(folder,"batch_analysis\\2point0\\R\\data\\pc_overlap_corr.mat"))
perf_data = dataset[[1]]
perf_data <- data.table( "value" = perf_data[,1],
"dataset" = perf_data[,2],
"comp" = factor(perf_data[,3]),
"expected" = perf_data[,4],
"training" = factor(perf_data[,4]),
"mouse" = perf_data[,5])
perf_data = perf_data[perf_data$training==1]
pc_overlap = ggplot(data=perf_data, aes(x=comp, y=value, fill=factor(comp))) +
stat_summary(fun=mean, geom='bar', alpha=1, position = position_dodge(width=0.8), width=0.8,colour=NA) +
stat_summary(fun.data = mean_cl_normal, geom="errorbar", width=0.3, position = position_dodge(width=0.8)) +
geom_point(position=position_jitterdodge(dodge.width = 0.8, jitter.width = 0.2), alpha=0.5, stroke = 0,shape=16,size=1) +
scale_x_discrete(breaks=c(1,2,3),
labels=c("Same abundance","Same novelty", "Different")) +
scale_fill_manual(values = c("#7372ae", "#81b882", "#cecdcd"))+
labs(y ='Correlation in place map \n(Fisher corrected)', x=NULL, fill=NULL)+guides(fill="none")
pc_overlap
lmm = lmer(value ~comp +(1|mouse) + (1|dataset), data =perf_data)
anova(lmm)
## Bayesian cross-decoding.
dataset = readMat(file.path(folder,"batch_analysis\\2point0\\R\\data\\all_cross_decoder_error.mat"))
perf_data = dataset[[1]]
perf_data <- data.table( "value" = perf_data[,1],
"dataset" = perf_data[,2],
"comp" = factor(perf_data[,3]),
"expected" = perf_data[,4],
